{"ast":null,"code":"var _jsxFileName = \"/app/src/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./MapComponent.css\";\n\n// OpenRouteService API-Key (ersetzen!)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ORS_API_KEY = \"5b3ce3597851110001cf62488ef9c2a0937d4cfeb44e454ec9d93fd3\";\n\n// Icons für Mülleimer je nach Füllstand\nconst getBinIcon = fillLevel => {\n  const colors = [\"green\", \"yellow\", \"red\"];\n  const colorIndex = fillLevel <= 33 ? 0 : fillLevel <= 66 ? 1 : 2;\n  return new L.Icon({\n    iconUrl: `/icons/bin_icon_${colors[colorIndex]}.svg`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 30]\n  });\n};\nconst MapComponent = () => {\n  _s();\n  const [bins, setBins] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const mapRef = useRef(null);\n  const routeLayerRef = useRef(null); // Layer für die Route\n\n  // Benutzerstandort abrufen\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"📍 Standort ermittelt:\", position.coords);\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => console.error(\"⚠️ Standortfehler:\", error), {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0\n      });\n    } else {\n      console.error(\"⚠️ Geolocation wird nicht unterstützt.\");\n    }\n  }, []);\n\n  // API-Daten abrufen (Mülleimer-Standorte & Füllstände)\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/bins\");\n      if (!response.ok) throw new Error(`HTTP Fehler: ${response.status}`);\n      const data = await response.json();\n      console.log(\"🗑️ Mülleimer geladen:\", data);\n      setBins(data.filter(b => b.latitude && b.longitude));\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error(\"⚠️ Fehler beim Laden der Daten:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 300000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Route mit OpenRouteService berechnen\n  const calculateRoute = async destination => {\n    if (!userLocation) {\n      console.warn(\"⚠️ Benutzerstandort nicht verfügbar!\");\n      return;\n    }\n    if (!destination || !destination.latitude || !destination.longitude) {\n      console.warn(\"⚠️ Ungültiger Zielpunkt:\", destination);\n      return;\n    }\n    console.log(`📍 Berechne Route von [${userLocation.latitude}, ${userLocation.longitude}] zu [${destination.latitude}, ${destination.longitude}]`);\n    const map = mapRef.current;\n    if (!map) {\n      console.error(\"⚠️ Karteninstanz nicht gefunden!\");\n      return;\n    }\n\n    // Vorherige Route entfernen\n    if (routeLayerRef.current) {\n      console.log(\"🔄 Entferne alte Route...\");\n      map.removeLayer(routeLayerRef.current);\n    }\n    try {\n      const url = `https://api.openrouteservice.org/v2/directions/foot-walking?api_key=${ORS_API_KEY}&start=${userLocation.longitude},${userLocation.latitude}&end=${destination.longitude},${destination.latitude}`;\n      console.log(\"🌍 API-Anfrage:\", url);\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(`HTTP Fehler: ${response.status}`);\n      const data = await response.json();\n      console.log(\"📥 API-Antwort:\", data);\n      if (!data.routes || data.routes.length === 0) {\n        console.warn(\"❌ Keine Route gefunden!\");\n        return;\n      }\n\n      // Koordinaten für die Route extrahieren\n      const routeCoords = data.routes[0].geometry.coordinates.map(([lon, lat]) => [lat, lon]);\n      console.log(\"🗺️ Route erhalten:\", routeCoords);\n\n      // Route auf der Karte einzeichnen\n      routeLayerRef.current = L.polyline(routeCoords, {\n        color: \"blue\",\n        weight: 5,\n        opacity: 0.7\n      }).addTo(map);\n      console.log(\"✅ Route erfolgreich gezeichnet!\");\n    } catch (error) {\n      console.error(\"⚠️ Fehler bei der Routenberechnung:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Letzte Aktualisierung: \", (lastUpdated === null || lastUpdated === void 0 ? void 0 : lastUpdated.toLocaleTimeString()) || \"Wird geladen...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        className: \"refresh-button\",\n        children: \"\\uD83D\\uDD04 Neu laden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: userLocation ? [userLocation.latitude, userLocation.longitude] : [52.52, 13.405],\n      zoom: 13,\n      style: {\n        height: \"80vh\",\n        width: \"100%\"\n      },\n      whenCreated: map => mapRef.current = map,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [userLocation.latitude, userLocation.longitude],\n        icon: L.icon({\n          iconUrl: \"/icons/location.svg\",\n          iconSize: [30, 30],\n          iconAnchor: [15, 30]\n        }),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Dein Standort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), bins.map(bin => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [bin.latitude, bin.longitude],\n        icon: getBinIcon(bin.fill_level),\n        eventHandlers: {\n          click: () => {\n            if (!userLocation) {\n              console.warn(\"⚠️ Benutzerstandort nicht verfügbar!\");\n              return;\n            }\n            calculateRoute(bin);\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: bin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fill-level\",\n              style: {\n                width: `${bin.fill_level}%`,\n                backgroundColor: bin.fill_level > 66 ? \"#f44336\" : bin.fill_level > 33 ? \"#ffc107\" : \"#4caf50\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [bin.fill_level, \"% gef\\xFCllt\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, bin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"ULoqoYF8g2Ie9rBmF8JrIhpvfXQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","ORS_API_KEY","getBinIcon","fillLevel","colors","colorIndex","Icon","iconUrl","iconSize","iconAnchor","MapComponent","_s","bins","setBins","lastUpdated","setLastUpdated","userLocation","setUserLocation","mapRef","routeLayerRef","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","error","enableHighAccuracy","timeout","maximumAge","fetchData","response","fetch","ok","Error","status","data","json","filter","b","Date","interval","setInterval","clearInterval","calculateRoute","destination","warn","map","current","removeLayer","url","routes","length","routeCoords","geometry","coordinates","lon","lat","polyline","color","weight","opacity","addTo","className","children","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","center","zoom","style","height","width","whenCreated","attribution","icon","bin","fill_level","eventHandlers","click","name","backgroundColor","id","_c","$RefreshReg$"],"sources":["/app/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./MapComponent.css\";\n\n// OpenRouteService API-Key (ersetzen!)\nconst ORS_API_KEY = \"5b3ce3597851110001cf62488ef9c2a0937d4cfeb44e454ec9d93fd3\";\n\n// Icons für Mülleimer je nach Füllstand\nconst getBinIcon = (fillLevel) => {\n  const colors = [\"green\", \"yellow\", \"red\"];\n  const colorIndex = fillLevel <= 33 ? 0 : fillLevel <= 66 ? 1 : 2;\n  return new L.Icon({\n    iconUrl: `/icons/bin_icon_${colors[colorIndex]}.svg`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 30],\n  });\n};\n\nconst MapComponent = () => {\n  const [bins, setBins] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const mapRef = useRef(null);\n  const routeLayerRef = useRef(null); // Layer für die Route\n\n  // Benutzerstandort abrufen\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          console.log(\"📍 Standort ermittelt:\", position.coords);\n          setUserLocation({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        (error) => console.error(\"⚠️ Standortfehler:\", error),\n        { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }\n      );\n    } else {\n      console.error(\"⚠️ Geolocation wird nicht unterstützt.\");\n    }\n  }, []);\n\n  // API-Daten abrufen (Mülleimer-Standorte & Füllstände)\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/bins\");\n      if (!response.ok) throw new Error(`HTTP Fehler: ${response.status}`);\n\n      const data = await response.json();\n      console.log(\"🗑️ Mülleimer geladen:\", data);\n      setBins(data.filter((b) => b.latitude && b.longitude));\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error(\"⚠️ Fehler beim Laden der Daten:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 300000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Route mit OpenRouteService berechnen\n  const calculateRoute = async (destination) => {\n    if (!userLocation) {\n      console.warn(\"⚠️ Benutzerstandort nicht verfügbar!\");\n      return;\n    }\n    if (!destination || !destination.latitude || !destination.longitude) {\n      console.warn(\"⚠️ Ungültiger Zielpunkt:\", destination);\n      return;\n    }\n\n    console.log(`📍 Berechne Route von [${userLocation.latitude}, ${userLocation.longitude}] zu [${destination.latitude}, ${destination.longitude}]`);\n\n    const map = mapRef.current;\n    if (!map) {\n      console.error(\"⚠️ Karteninstanz nicht gefunden!\");\n      return;\n    }\n\n    // Vorherige Route entfernen\n    if (routeLayerRef.current) {\n      console.log(\"🔄 Entferne alte Route...\");\n      map.removeLayer(routeLayerRef.current);\n    }\n\n    try {\n      const url = `https://api.openrouteservice.org/v2/directions/foot-walking?api_key=${ORS_API_KEY}&start=${userLocation.longitude},${userLocation.latitude}&end=${destination.longitude},${destination.latitude}`;\n      console.log(\"🌍 API-Anfrage:\", url);\n\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(`HTTP Fehler: ${response.status}`);\n\n      const data = await response.json();\n      console.log(\"📥 API-Antwort:\", data);\n\n      if (!data.routes || data.routes.length === 0) {\n        console.warn(\"❌ Keine Route gefunden!\");\n        return;\n      }\n\n      // Koordinaten für die Route extrahieren\n      const routeCoords = data.routes[0].geometry.coordinates.map(([lon, lat]) => [lat, lon]);\n      console.log(\"🗺️ Route erhalten:\", routeCoords);\n\n      // Route auf der Karte einzeichnen\n      routeLayerRef.current = L.polyline(routeCoords, {\n        color: \"blue\",\n        weight: 5,\n        opacity: 0.7,\n      }).addTo(map);\n\n      console.log(\"✅ Route erfolgreich gezeichnet!\");\n    } catch (error) {\n      console.error(\"⚠️ Fehler bei der Routenberechnung:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"status-bar\">\n        <div>\n          Letzte Aktualisierung: {lastUpdated?.toLocaleTimeString() || \"Wird geladen...\"}\n        </div>\n        <button onClick={fetchData} className=\"refresh-button\">\n          🔄 Neu laden\n        </button>\n      </div>\n\n      <MapContainer\n        center={userLocation ? [userLocation.latitude, userLocation.longitude] : [52.52, 13.405]}\n        zoom={13}\n        style={{ height: \"80vh\", width: \"100%\" }}\n        whenCreated={(map) => (mapRef.current = map)}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n        />\n\n        {userLocation && (\n          <Marker\n            position={[userLocation.latitude, userLocation.longitude]}\n            icon={L.icon({\n              iconUrl: \"/icons/location.svg\",\n              iconSize: [30, 30],\n              iconAnchor: [15, 30],\n            })}\n          >\n            <Popup>Dein Standort</Popup>\n          </Marker>\n        )}\n\n        {bins.map((bin) => (\n          <Marker\n            key={bin.id}\n            position={[bin.latitude, bin.longitude]}\n            icon={getBinIcon(bin.fill_level)}\n            eventHandlers={{\n              click: () => {\n                if (!userLocation) {\n                  console.warn(\"⚠️ Benutzerstandort nicht verfügbar!\");\n                  return;\n                }\n                calculateRoute(bin);\n              },\n            }}\n          >\n            <Popup>\n              <div className=\"popup\">\n                <h4>{bin.name}</h4>\n                <div\n                  className=\"fill-level\"\n                  style={{\n                    width: `${bin.fill_level}%`,\n                    backgroundColor:\n                      bin.fill_level > 66\n                        ? \"#f44336\"\n                        : bin.fill_level > 33\n                        ? \"#ffc107\"\n                        : \"#4caf50\",\n                  }}\n                />\n                <p>{bin.fill_level}% gefüllt</p>\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}