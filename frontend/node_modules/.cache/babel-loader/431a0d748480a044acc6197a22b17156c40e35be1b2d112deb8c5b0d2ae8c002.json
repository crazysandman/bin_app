{"ast":null,"code":"var _jsxFileName = \"/app/src/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./MapComponent.css\";\n\n// OpenRouteService API-Key (ersetzen!)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ORS_API_KEY = \"5b3ce3597851110001cf62488ef9c2a0937d4cfeb44e454ec9d93fd3\";\n\n// Icons definieren\nconst getBinIcon = fillLevel => {\n  if (fillLevel <= 33) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_green.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30]\n    });\n  } else if (fillLevel <= 66) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_yellow.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30]\n    });\n  } else {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_red.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30]\n    });\n  }\n};\n\n// Hauptkomponente\nconst MapComponent = () => {\n  _s();\n  const [bins, setBins] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const mapRef = useRef(null);\n  const routingLayerRef = useRef(null); // Layer für Route\n\n  // Benutzerstandort ermitteln\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Fehler bei der Standortermittlung:\", error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0\n      });\n    } else {\n      console.error(\"Geolocation wird nicht unterstützt.\");\n    }\n  }, []);\n\n  // API-Daten abrufen\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/bins\");\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      setBins(data.filter(b => b.latitude && b.longitude));\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error(\"Aktualisierungsfehler:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 300000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Route mit OpenRouteService berechnen\n  const calculateRoute = async destination => {\n    if (!userLocation || !destination) {\n      console.error(\"Fehlende User-Location oder Destination!\");\n      return;\n    }\n    console.log(\"📍 Starte Routenberechnung zu:\", destination);\n    const map = mapRef.current;\n    if (!map) {\n      console.error(\"Karteninstanz nicht vorhanden!\");\n      return;\n    }\n\n    // Vorherige Route entfernen\n    if (routingLayerRef.current) {\n      console.log(\"🔄 Entferne alte Route...\");\n      map.removeLayer(routingLayerRef.current);\n    }\n    try {\n      const response = await fetch(`https://api.openrouteservice.org/v2/directions/foot-walking?api_key=${ORS_API_KEY}&start=${userLocation.longitude},${userLocation.latitude}&end=${destination.longitude},${destination.latitude}`);\n      console.log(\"🌍 API-Anfrage gesendet:\", response.url);\n      if (!response.ok) {\n        throw new Error(`Fehlerhafte API-Antwort: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"📥 API-Antwort erhalten:\", data);\n      if (!data.routes || data.routes.length === 0) {\n        throw new Error(\"❌ Keine Route gefunden!\");\n      }\n\n      // Koordinaten für die Route extrahieren\n      const routeCoords = data.routes[0].geometry.coordinates.map(([lon, lat]) => [lat, lon]);\n      console.log(\"🗺️ Route erhalten:\", routeCoords);\n\n      // Linie auf der Karte zeichnen\n      routingLayerRef.current = L.polyline(routeCoords, {\n        color: \"blue\",\n        weight: 5,\n        opacity: 0.7\n      }).addTo(map);\n      console.log(\"✅ Route erfolgreich gezeichnet!\");\n    } catch (error) {\n      console.error(\"⚠️ Fehler bei der Routenberechnung:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Letzte Aktualisierung: \", (lastUpdated === null || lastUpdated === void 0 ? void 0 : lastUpdated.toLocaleTimeString()) || \"Wird geladen...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        className: \"refresh-button\",\n        children: \"\\uD83D\\uDD04 Neu laden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: userLocation ? [userLocation.latitude, userLocation.longitude] : [52.52, 13.405],\n      zoom: 13,\n      style: {\n        height: \"80vh\",\n        width: \"100%\"\n      },\n      whenCreated: map => mapRef.current = map,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [userLocation.latitude, userLocation.longitude],\n        icon: L.icon({\n          iconUrl: \"/icons/location.svg\",\n          iconSize: [30, 30],\n          iconAnchor: [15, 30]\n        }),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Dein Standort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), bins.map(bin => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [bin.latitude, bin.longitude],\n        icon: getBinIcon(bin.fill_level),\n        eventHandlers: {\n          click: () => calculateRoute(bin)\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: bin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fill-level\",\n              style: {\n                width: `${bin.fill_level}%`,\n                backgroundColor: bin.fill_level > 66 ? \"#f44336\" : bin.fill_level > 33 ? \"#ffc107\" : \"#4caf50\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [bin.fill_level, \"% gef\\xFCllt\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, bin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"plL8kOEa8OrUWJ+zMWYysjkPGXg=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","ORS_API_KEY","getBinIcon","fillLevel","Icon","iconUrl","iconSize","iconAnchor","MapComponent","_s","bins","setBins","lastUpdated","setLastUpdated","userLocation","setUserLocation","mapRef","routingLayerRef","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","enableHighAccuracy","timeout","maximumAge","fetchData","response","fetch","ok","Error","status","data","json","filter","b","Date","interval","setInterval","clearInterval","calculateRoute","destination","log","map","current","removeLayer","url","routes","length","routeCoords","geometry","coordinates","lon","lat","polyline","color","weight","opacity","addTo","className","children","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","center","zoom","style","height","width","whenCreated","attribution","icon","bin","fill_level","eventHandlers","click","name","backgroundColor","id","_c","$RefreshReg$"],"sources":["/app/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./MapComponent.css\";\n\n// OpenRouteService API-Key (ersetzen!)\nconst ORS_API_KEY = \"5b3ce3597851110001cf62488ef9c2a0937d4cfeb44e454ec9d93fd3\";\n\n// Icons definieren\nconst getBinIcon = (fillLevel) => {\n  if (fillLevel <= 33) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_green.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30],\n    });\n  } else if (fillLevel <= 66) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_yellow.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30],\n    });\n  } else {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_red.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30],\n    });\n  }\n};\n\n// Hauptkomponente\nconst MapComponent = () => {\n  const [bins, setBins] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const mapRef = useRef(null);\n  const routingLayerRef = useRef(null); // Layer für Route\n\n  // Benutzerstandort ermitteln\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.error(\"Fehler bei der Standortermittlung:\", error);\n        },\n        { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }\n      );\n    } else {\n      console.error(\"Geolocation wird nicht unterstützt.\");\n    }\n  }, []);\n\n  // API-Daten abrufen\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/bins\");\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      \n      const data = await response.json();\n      setBins(data.filter((b) => b.latitude && b.longitude));\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error(\"Aktualisierungsfehler:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 300000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Route mit OpenRouteService berechnen\n  const calculateRoute = async (destination) => {\n    if (!userLocation || !destination) {\n      console.error(\"Fehlende User-Location oder Destination!\");\n      return;\n    }\n  \n    console.log(\"📍 Starte Routenberechnung zu:\", destination);\n  \n    const map = mapRef.current;\n    if (!map) {\n      console.error(\"Karteninstanz nicht vorhanden!\");\n      return;\n    }\n  \n    // Vorherige Route entfernen\n    if (routingLayerRef.current) {\n      console.log(\"🔄 Entferne alte Route...\");\n      map.removeLayer(routingLayerRef.current);\n    }\n  \n    try {\n      const response = await fetch(\n        `https://api.openrouteservice.org/v2/directions/foot-walking?api_key=${ORS_API_KEY}&start=${userLocation.longitude},${userLocation.latitude}&end=${destination.longitude},${destination.latitude}`\n      );\n  \n      console.log(\"🌍 API-Anfrage gesendet:\", response.url);\n  \n      if (!response.ok) {\n        throw new Error(`Fehlerhafte API-Antwort: ${response.status}`);\n      }\n  \n      const data = await response.json();\n      console.log(\"📥 API-Antwort erhalten:\", data);\n  \n      if (!data.routes || data.routes.length === 0) {\n        throw new Error(\"❌ Keine Route gefunden!\");\n      }\n  \n      // Koordinaten für die Route extrahieren\n      const routeCoords = data.routes[0].geometry.coordinates.map(([lon, lat]) => [lat, lon]);\n      console.log(\"🗺️ Route erhalten:\", routeCoords);\n  \n      // Linie auf der Karte zeichnen\n      routingLayerRef.current = L.polyline(routeCoords, {\n        color: \"blue\",\n        weight: 5,\n        opacity: 0.7,\n      }).addTo(map);\n  \n      console.log(\"✅ Route erfolgreich gezeichnet!\");\n    } catch (error) {\n      console.error(\"⚠️ Fehler bei der Routenberechnung:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"status-bar\">\n        <div>\n          Letzte Aktualisierung: {lastUpdated?.toLocaleTimeString() || \"Wird geladen...\"}\n        </div>\n        <button onClick={fetchData} className=\"refresh-button\">\n          🔄 Neu laden\n        </button>\n      </div>\n\n      <MapContainer\n        center={userLocation ? [userLocation.latitude, userLocation.longitude] : [52.52, 13.405]}\n        zoom={13}\n        style={{ height: \"80vh\", width: \"100%\" }}\n        whenCreated={(map) => (mapRef.current = map)}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n        />\n\n        {userLocation && (\n          <Marker\n            position={[userLocation.latitude, userLocation.longitude]}\n            icon={L.icon({\n              iconUrl: \"/icons/location.svg\",\n              iconSize: [30, 30],\n              iconAnchor: [15, 30],\n            })}\n          >\n            <Popup>Dein Standort</Popup>\n          </Marker>\n        )}\n\n        {bins.map((bin) => (\n          <Marker\n            key={bin.id}\n            position={[bin.latitude, bin.longitude]}\n            icon={getBinIcon(bin.fill_level)}\n            eventHandlers={{\n              click: () => calculateRoute(bin),\n            }}\n          >\n            <Popup>\n              <div className=\"popup\">\n                <h4>{bin.name}</h4>\n                <div\n                  className=\"fill-level\"\n                  style={{\n                    width: `${bin.fill_level}%`,\n                    backgroundColor:\n                      bin.fill_level > 66\n                        ? \"#f44336\"\n                        : bin.fill_level > 33\n                        ? \"#ffc107\"\n                        : \"#4caf50\",\n                  }}\n                />\n                <p>{bin.fill_level}% gefüllt</p>\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}