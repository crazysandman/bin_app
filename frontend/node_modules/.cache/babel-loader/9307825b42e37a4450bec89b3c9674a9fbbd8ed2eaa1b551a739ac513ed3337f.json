{"ast":null,"code":"var _jsxFileName = \"/app/src/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"./MapComponent.css\";\n\n// Icons definieren\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getBinIcon = fillLevel => {\n  if (fillLevel <= 33) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_green.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30]\n    });\n  } else if (fillLevel <= 66) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_yellow.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30]\n    });\n  } else {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_red.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30]\n    });\n  }\n};\n\n// Hauptkomponente\nconst MapComponent = () => {\n  _s();\n  const [bins, setBins] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [userLocation, setUserLocation] = useState(null); // Zustand für den Benutzerstandort\n  const mapRef = useRef(null); // Referenz für die Map-Instanz\n  const routingControlRef = useRef(null); // Referenz für das Routing-Control\n\n  // Benutzerstandort ermitteln\n  useEffect(() => {\n    if (navigator.geolocation) {\n      console.log(\"Geolocation wird unterstützt. Frage Standort an...\");\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"Standort erfolgreich ermittelt:\", position);\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Fehler bei der Standortermittlung:\", error);\n      }, {\n        enableHighAccuracy: true,\n        // Höhere Genauigkeit\n        timeout: 10000,\n        // Timeout nach 10 Sekunden\n        maximumAge: 0 // Keine Cache-Nutzung\n      });\n    } else {\n      console.error(\"Geolocation wird nicht unterstützt.\");\n    }\n  }, []);\n\n  // Automatische Datenaktualisierung\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/bins\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"API-Antwort:\", data); // Logge die Antwort\n      setBins(data.filter(b => b.latitude && b.longitude));\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error(\"Aktualisierungsfehler:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 300000); // Alle 5 Minuten aktualisieren\n    return () => clearInterval(interval);\n  }, []);\n\n  // Route berechnen\n  const calculateRoute = destination => {\n    if (userLocation && destination && mapRef.current) {\n      const map = mapRef.current;\n\n      // Vorherige Route entfernen\n      if (routingControlRef.current) {\n        map.removeControl(routingControlRef.current);\n      }\n\n      // Neue Route berechnen\n      routingControlRef.current = L.Routing.control({\n        waypoints: [L.latLng(userLocation.latitude, userLocation.longitude),\n        // Startpunkt\n        L.latLng(destination.latitude, destination.longitude) // Zielpunkt\n        ],\n        routeWhileDragging: true,\n        show: true,\n        // Zeige die Route und Wegbeschreibung an\n        addWaypoints: false,\n        // Verhindere das Hinzufügen von Zwischenpunkten\n        draggableWaypoints: false // Verhindere das Verschieben von Wegpunkten\n      }).addTo(map);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Letzte Aktualisierung: \", (lastUpdated === null || lastUpdated === void 0 ? void 0 : lastUpdated.toLocaleTimeString()) || \"Wird geladen...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        className: \"refresh-button\",\n        children: \"\\uD83D\\uDD04 Neu laden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: userLocation ? [userLocation.latitude, userLocation.longitude] : [52.52, 13.405] // Zentrierung auf Benutzerstandort oder Berlin\n      ,\n      zoom: 13,\n      style: {\n        height: \"80vh\",\n        width: \"100%\"\n      },\n      whenCreated: map => mapRef.current = map // Map-Instanz in der Referenz speichern\n      ,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [userLocation.latitude, userLocation.longitude],\n        icon: L.icon({\n          iconUrl: \"/icons/location.svg\",\n          // Icon für den Benutzerstandort\n          iconSize: [30, 30],\n          iconAnchor: [15, 30]\n        }),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Dein Standort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), bins.map(bin => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [bin.latitude, bin.longitude],\n        icon: getBinIcon(bin.fill_level),\n        eventHandlers: {\n          click: () => calculateRoute(bin) // Route zum Mülleimer berechnen\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: bin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fill-level\",\n              style: {\n                width: `${bin.fill_level}%`,\n                backgroundColor: bin.fill_level > 66 ? \"#f44336\" : bin.fill_level > 33 ? \"#ffc107\" : \"#4caf50\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [bin.fill_level, \"% gef\\xFCllt\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, bin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"kEE04yaTO7MjkQK3ma9vKWo+UDE=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","getBinIcon","fillLevel","Icon","iconUrl","iconSize","iconAnchor","MapComponent","_s","bins","setBins","lastUpdated","setLastUpdated","userLocation","setUserLocation","mapRef","routingControlRef","navigator","geolocation","console","log","getCurrentPosition","position","latitude","coords","longitude","error","enableHighAccuracy","timeout","maximumAge","fetchData","response","fetch","ok","Error","status","data","json","filter","b","Date","interval","setInterval","clearInterval","calculateRoute","destination","current","map","removeControl","Routing","control","waypoints","latLng","routeWhileDragging","show","addWaypoints","draggableWaypoints","addTo","className","children","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","center","zoom","style","height","width","whenCreated","url","attribution","icon","bin","fill_level","eventHandlers","click","name","backgroundColor","id","_c","$RefreshReg$"],"sources":["/app/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"./MapComponent.css\";\n\n// Icons definieren\nconst getBinIcon = (fillLevel) => {\n  if (fillLevel <= 33) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_green.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30],\n    });\n  } else if (fillLevel <= 66) {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_yellow.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30],\n    });\n  } else {\n    return new L.Icon({\n      iconUrl: \"/icons/bin_icon_red.svg\",\n      iconSize: [30, 30],\n      iconAnchor: [15, 30],\n    });\n  }\n};\n\n// Hauptkomponente\nconst MapComponent = () => {\n  const [bins, setBins] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [userLocation, setUserLocation] = useState(null); // Zustand für den Benutzerstandort\n  const mapRef = useRef(null); // Referenz für die Map-Instanz\n  const routingControlRef = useRef(null); // Referenz für das Routing-Control\n\n  // Benutzerstandort ermitteln\n  useEffect(() => {\n    if (navigator.geolocation) {\n      console.log(\"Geolocation wird unterstützt. Frage Standort an...\");\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          console.log(\"Standort erfolgreich ermittelt:\", position);\n          setUserLocation({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.error(\"Fehler bei der Standortermittlung:\", error);\n        },\n        {\n          enableHighAccuracy: true, // Höhere Genauigkeit\n          timeout: 10000, // Timeout nach 10 Sekunden\n          maximumAge: 0, // Keine Cache-Nutzung\n        }\n      );\n    } else {\n      console.error(\"Geolocation wird nicht unterstützt.\");\n    }\n  }, []);\n\n  // Automatische Datenaktualisierung\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/bins\");\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"API-Antwort:\", data); // Logge die Antwort\n      setBins(data.filter((b) => b.latitude && b.longitude));\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error(\"Aktualisierungsfehler:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    const interval = setInterval(fetchData, 300000); // Alle 5 Minuten aktualisieren\n    return () => clearInterval(interval);\n  }, []);\n\n  // Route berechnen\n  const calculateRoute = (destination) => {\n    if (userLocation && destination && mapRef.current) {\n      const map = mapRef.current;\n\n      // Vorherige Route entfernen\n      if (routingControlRef.current) {\n        map.removeControl(routingControlRef.current);\n      }\n\n      // Neue Route berechnen\n      routingControlRef.current = L.Routing.control({\n        waypoints: [\n          L.latLng(userLocation.latitude, userLocation.longitude), // Startpunkt\n          L.latLng(destination.latitude, destination.longitude), // Zielpunkt\n        ],\n        routeWhileDragging: true,\n        show: true, // Zeige die Route und Wegbeschreibung an\n        addWaypoints: false, // Verhindere das Hinzufügen von Zwischenpunkten\n        draggableWaypoints: false, // Verhindere das Verschieben von Wegpunkten\n      }).addTo(map);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"status-bar\">\n        <div>\n          Letzte Aktualisierung: {lastUpdated?.toLocaleTimeString() || \"Wird geladen...\"}\n        </div>\n        <button onClick={fetchData} className=\"refresh-button\">\n          🔄 Neu laden\n        </button>\n      </div>\n\n      <MapContainer\n        center={userLocation ? [userLocation.latitude, userLocation.longitude] : [52.52, 13.405]} // Zentrierung auf Benutzerstandort oder Berlin\n        zoom={13}\n        style={{ height: \"80vh\", width: \"100%\" }}\n        whenCreated={(map) => (mapRef.current = map)} // Map-Instanz in der Referenz speichern\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n        />\n\n        {userLocation && (\n          <Marker\n            position={[userLocation.latitude, userLocation.longitude]}\n            icon={L.icon({\n              iconUrl: \"/icons/location.svg\", // Icon für den Benutzerstandort\n              iconSize: [30, 30],\n              iconAnchor: [15, 30],\n            })}\n          >\n            <Popup>Dein Standort</Popup>\n          </Marker>\n        )}\n\n        {bins.map((bin) => (\n          <Marker\n            key={bin.id}\n            position={[bin.latitude, bin.longitude]}\n            icon={getBinIcon(bin.fill_level)}\n            eventHandlers={{\n              click: () => calculateRoute(bin), // Route zum Mülleimer berechnen\n            }}\n          >\n            <Popup>\n              <div className=\"popup\">\n                <h4>{bin.name}</h4>\n                <div\n                  className=\"fill-level\"\n                  style={{\n                    width: `${bin.fill_level}%`,\n                    backgroundColor:\n                      bin.fill_level > 66\n                        ? \"#f44336\"\n                        : bin.fill_level > 33\n                        ? \"#ffc107\"\n                        : \"#4caf50\",\n                  }}\n                />\n                <p>{bin.fill_level}% gefüllt</p>\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}